///
/// JHybridNitroFetchSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridNitroFetchSpec.hpp"

// Forward declaration of `HybridNitroFetchClientSpec` to properly resolve imports.
namespace margelo::nitro::nitrofetch { class HybridNitroFetchClientSpec; }

#include <memory>
#include "HybridNitroFetchClientSpec.hpp"
#include "JHybridNitroFetchClientSpec.hpp"

namespace margelo::nitro::nitrofetch {

  jni::local_ref<JHybridNitroFetchSpec::jhybriddata> JHybridNitroFetchSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridNitroFetchSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridNitroFetchSpec::initHybrid),
    });
  }

  size_t JHybridNitroFetchSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  void JHybridNitroFetchSpec::dispose() noexcept {
    static const auto method = javaClassStatic()->getMethod<void()>("dispose");
    method(_javaPart);
  }

  // Properties
  

  // Methods
  std::shared_ptr<HybridNitroFetchClientSpec> JHybridNitroFetchSpec::createClient() {
    static const auto method = javaClassStatic()->getMethod<jni::local_ref<JHybridNitroFetchClientSpec::javaobject>()>("createClient");
    auto __result = method(_javaPart);
    return __result->cthis()->shared_cast<JHybridNitroFetchClientSpec>();
  }

} // namespace margelo::nitro::nitrofetch
