///
/// HybridInlineExecutionProhibitedExceptionSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridInlineExecutionProhibitedExceptionSpec.hpp"

// Forward declaration of `HybridInlineExecutionProhibitedExceptionSpec_cxx` to properly resolve imports.
namespace NitroFetch { class HybridInlineExecutionProhibitedExceptionSpec_cxx; }

// Forward declaration of `HybridCronetExceptionSpecSwift` to properly resolve imports.
namespace margelo::nitro::nitrofetch { class HybridCronetExceptionSpecSwift; }

#include "HybridCronetExceptionSpecSwift.hpp"

#include "NitroFetch-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::nitrofetch {

  /**
   * The C++ part of HybridInlineExecutionProhibitedExceptionSpec_cxx.swift.
   *
   * HybridInlineExecutionProhibitedExceptionSpecSwift (C++) accesses HybridInlineExecutionProhibitedExceptionSpec_cxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridInlineExecutionProhibitedExceptionSpec_cxx can directly inherit from the C++ class HybridInlineExecutionProhibitedExceptionSpec
   * to simplify the whole structure and memory management.
   */
  class HybridInlineExecutionProhibitedExceptionSpecSwift: public virtual HybridInlineExecutionProhibitedExceptionSpec, public virtual HybridCronetExceptionSpecSwift {
  public:
    // Constructor from a Swift instance
    explicit HybridInlineExecutionProhibitedExceptionSpecSwift(const NitroFetch::HybridInlineExecutionProhibitedExceptionSpec_cxx& swiftPart):
      HybridObject(HybridInlineExecutionProhibitedExceptionSpec::TAG),
      HybridCronetExceptionSpecSwift(swiftPart),
      _swiftPart(swiftPart) { }

  public:
    // Get the Swift part
    inline NitroFetch::HybridInlineExecutionProhibitedExceptionSpec_cxx& getSwiftPart() noexcept {
      return _swiftPart;
    }

  public:
    inline size_t getExternalMemorySize() noexcept override {
      return _swiftPart.getMemorySize();
    }
    void dispose() noexcept override {
      _swiftPart.dispose();
    }

  public:
    // Properties
    

  public:
    // Methods
    

  private:
    NitroFetch::HybridInlineExecutionProhibitedExceptionSpec_cxx _swiftPart;
  };

} // namespace margelo::nitro::nitrofetch
