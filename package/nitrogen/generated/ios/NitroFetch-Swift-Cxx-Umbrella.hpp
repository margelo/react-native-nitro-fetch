///
/// NitroFetch-Swift-Cxx-Umbrella.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `HybridNitroFetchClientSpec` to properly resolve imports.
namespace margelo::nitro::nitrofetch { class HybridNitroFetchClientSpec; }
// Forward declaration of `HybridNitroFetchSpec` to properly resolve imports.
namespace margelo::nitro::nitrofetch { class HybridNitroFetchSpec; }
// Forward declaration of `NitroHeader` to properly resolve imports.
namespace margelo::nitro::nitrofetch { struct NitroHeader; }
// Forward declaration of `NitroRequestMethod` to properly resolve imports.
namespace margelo::nitro::nitrofetch { enum class NitroRequestMethod; }
// Forward declaration of `NitroRequest` to properly resolve imports.
namespace margelo::nitro::nitrofetch { struct NitroRequest; }
// Forward declaration of `NitroResponse` to properly resolve imports.
namespace margelo::nitro::nitrofetch { struct NitroResponse; }

// Include C++ defined types
#include "HybridNitroFetchClientSpec.hpp"
#include "HybridNitroFetchSpec.hpp"
#include "NitroHeader.hpp"
#include "NitroRequest.hpp"
#include "NitroRequestMethod.hpp"
#include "NitroResponse.hpp"
#include <NitroModules/Promise.hpp>
#include <NitroModules/Result.hpp>
#include <exception>
#include <memory>
#include <optional>
#include <string>
#include <vector>

// C++ helpers for Swift
#include "NitroFetch-Swift-Cxx-Bridge.hpp"

// Common C++ types used in Swift
#include <NitroModules/ArrayBufferHolder.hpp>
#include <NitroModules/AnyMapUtils.hpp>
#include <NitroModules/RuntimeError.hpp>
#include <NitroModules/DateToChronoDate.hpp>

// Forward declarations of Swift defined types
// Forward declaration of `HybridNitroFetchClientSpec_cxx` to properly resolve imports.
namespace NitroFetch { class HybridNitroFetchClientSpec_cxx; }
// Forward declaration of `HybridNitroFetchSpec_cxx` to properly resolve imports.
namespace NitroFetch { class HybridNitroFetchSpec_cxx; }

// Include Swift defined types
#if __has_include("NitroFetch-Swift.h")
// This header is generated by Xcode/Swift on every app build.
// If it cannot be found, make sure the Swift module's name (= podspec name) is actually "NitroFetch".
#include "NitroFetch-Swift.h"
// Same as above, but used when building with frameworks (`use_frameworks`)
#elif __has_include(<NitroFetch/NitroFetch-Swift.h>)
#include <NitroFetch/NitroFetch-Swift.h>
#else
#error NitroFetch's autogenerated Swift header cannot be found! Make sure the Swift module's name (= podspec name) is actually "NitroFetch", and try building the app first.
#endif
