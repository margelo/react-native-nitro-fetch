///
/// EffectiveConnectionType.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `EffectiveConnectionType`, backed by a C++ enum.
 */
public typealias EffectiveConnectionType = margelo.nitro.nitrofetch.EffectiveConnectionType

public extension EffectiveConnectionType {
  /**
   * Get a EffectiveConnectionType for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "unknown":
        self = .unknown
      case "offline":
        self = .offline
      case "slow-2G":
        self = .slow2g
      case "2G":
        self = .2g
      case "3G":
        self = .3g
      case "4G":
        self = .4g
      case "wifi":
        self = .wifi
      default:
        return nil
    }
  }

  /**
   * Get the String value this EffectiveConnectionType represents.
   */
  var stringValue: String {
    switch self {
      case .unknown:
        return "unknown"
      case .offline:
        return "offline"
      case .slow2g:
        return "slow-2G"
      case .2g:
        return "2G"
      case .3g:
        return "3G"
      case .4g:
        return "4G"
      case .wifi:
        return "wifi"
    }
  }
}
