///
/// HybridInlineExecutionProhibitedExceptionSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridInlineExecutionProhibitedExceptionSpec``
public protocol HybridInlineExecutionProhibitedExceptionSpec_protocol: HybridObject, HybridCronetExceptionSpec_protocol {
  // Properties
  

  // Methods
  
}

/// See ``HybridInlineExecutionProhibitedExceptionSpec``
open class HybridInlineExecutionProhibitedExceptionSpec_base: HybridCronetExceptionSpec_base {
  private weak var cxxWrapper: HybridInlineExecutionProhibitedExceptionSpec_cxx? = nil
  public override init() { super.init() }
  public override func getCxxWrapper() -> HybridInlineExecutionProhibitedExceptionSpec_cxx {
  #if DEBUG
    guard self is HybridInlineExecutionProhibitedExceptionSpec else {
      fatalError("`self` is not a `HybridInlineExecutionProhibitedExceptionSpec`! Did you accidentally inherit from `HybridInlineExecutionProhibitedExceptionSpec_base` instead of `HybridInlineExecutionProhibitedExceptionSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridInlineExecutionProhibitedExceptionSpec_cxx(self as! HybridInlineExecutionProhibitedExceptionSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the InlineExecutionProhibitedException HybridObject.
 * Implement this protocol to create Swift-based instances of InlineExecutionProhibitedException.
 * ```swift
 * class HybridInlineExecutionProhibitedException : HybridInlineExecutionProhibitedExceptionSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridInlineExecutionProhibitedExceptionSpec = HybridInlineExecutionProhibitedExceptionSpec_protocol & HybridInlineExecutionProhibitedExceptionSpec_base
