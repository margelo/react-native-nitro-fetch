///
/// JVariant_ArrayBuffer_String.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JVariant_ArrayBuffer_String.hpp"

namespace margelo::nitro::nitrofetch {
  /**
   * Converts JVariant_ArrayBuffer_String to std::variant<std::shared_ptr<ArrayBuffer>, std::string>
   */
  std::variant<std::shared_ptr<ArrayBuffer>, std::string> JVariant_ArrayBuffer_String::toCpp() const {
    if (isInstanceOf(JVariant_ArrayBuffer_String_impl::First::javaClassStatic())) {
      // It's a `std::shared_ptr<ArrayBuffer>`
      auto jniValue = static_cast<const JVariant_ArrayBuffer_String_impl::First*>(this)->getValue();
      return jniValue->cthis()->getArrayBuffer();
    } else if (isInstanceOf(JVariant_ArrayBuffer_String_impl::Second::javaClassStatic())) {
      // It's a `std::string`
      auto jniValue = static_cast<const JVariant_ArrayBuffer_String_impl::Second*>(this)->getValue();
      return jniValue->toStdString();
    }
    throw std::invalid_argument("Variant is unknown Kotlin instance!");
  }
} // namespace margelo::nitro::nitrofetch
